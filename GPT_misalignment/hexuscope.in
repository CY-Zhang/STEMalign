GPTLICENSE=1251405651;
########
#
########

N  = 2000;
#N = 100;
KE = 200000;
GB  = 0.96745261012;
# GB = 1.233;

setparticles("beam", N, me, -qe, -N*qe);
settransform("wcs", "z", -0.42, "beam");
setGBxdist("beam", "u", GB, 0);
setGBthetadist("beam", "u", alpha/2, alpha);
setGBphidist("beam", "u", 0, 2*pi);

### steering dipoles ###
cx = 1.0e-2;
cz = 5.0e-3;

###
# Objective lens
###

fL  = 0.06 + delta;
fz0 = 0.12;
z0 = -0.24;

#sol3pos = 0.9; #0.58;
#sol3R = 5.0e-3;
#sol3L = 1.0e-3;

sol1pos = -36.0e-2;
sol1R   =    1.0e-3;
sol1L   =    1.0e-2;

sol2pos = -30.0e-2;
sol2R   =   1.0e-3;
sol2L   =   1.0e-2;

soltpos = -24.0e-2;
soltR   =   1.0e-3;
soltL   =   1.0e-2;

sol3pos =  0.99 + 0.00361; #0.52;
sol3R   =  1.0e-3;
sol3L   =  1.0e-2;

sol0pos  = -30.0e-2;
sol0R    =  1.0e-3;
sol0L    =  1.0e-3;

sol4pos  =120.0e-2;
sol4R    =  1.0e-3;
sol4L    =  1.0e-3;

csol1pos =  0.06;
csol1R   =  1.0e-3;
csol1L   =  1.0e-3;

csol2pos =  0.18;
csol2R   =  1.0e-3;
csol2L   =  1.0e-3;

csol3pos =  0.5; #0.30;
csol3R   =  1.0e-3;
csol3L   =  1.0e-3;

csol4pos =  0.72; #0.52;
csol4R   =  1.0e-3;
csol4L   =  1.0e-3;

hex1pos =  fz0 - 2*fL;
hex1L   =  0.06;

hex2pos =  fz0 + 2*fL; 
hex2L   =  0.06; 

bzsolenoidG("wcs", sol1ox, sol1oy, sol1oz + sol1pos, 
                    sol1xx, sol1xy, sol1xz,
                    sol1yx, sol1yy, sol1yz, 
                    sol1R,  sol1L,  sol1nI);
bzsolenoidG("wcs", sol2ox, sol2oy, sol2oz + sol2pos, 
                    sol2xx, sol2xy, sol2xz,
                    sol2yx, sol2yy, sol2yz, 
                    sol2R,  sol2L,  sol2nI);
bzsolenoidG("wcs", soltox, soltoy, soltoz + soltpos, 
                    soltxx, soltxy, soltxz,
                    soltyx, soltyy, soltyz, 
                    soltR,  soltL,  soltnI);

bzsolenoidO3("wcs", csol1ox, csol1oy, csol1oz + csol1pos, 
                    csol1xx, csol1xy, csol1xz,
                    csol1yx, csol1yy, csol1yz, 
                    csol1R,  csol1L,  csol1nI);

bzsolenoidO3("wcs", csol2ox, csol2oy, csol2oz + csol2pos, 
                    csol2xx, csol2xy, csol2xz,
                    csol2yx, csol2yy, csol2yz,  
                    csol2R,  csol2L,  csol2nI);

bzsolenoidO3("wcs", csol3ox, csol3oy, csol3oz + csol3pos, 
                    csol3xx, csol3xy, csol3xz,
                    csol3yx, csol3yy, csol3yz,  
                    csol3R,  csol3L,  csol3nI);

bzsolenoidO3("wcs", csol4ox, csol4oy, csol4oz + csol4pos, 
                    csol4xx, csol4xy, csol4xz,
                    csol4yx, csol4yy, csol4yz,  
                    csol4R,  csol4L,  csol4nI);

sextupoleF("wcs", hex1ox, hex1oy, hex1oz + hex1pos, 
                  hex1xx, hex1xy, hex1xz,     
                  hex1yx, hex1yy, hex1yz,     
                  hex1L,  hex1G);

sextupoleF("wcs", hex2ox, hex2oy, hex2oz + hex2pos, 
                  hex2xx, hex2xy, hex2xz,     
                  hex2yx, hex2yy, hex2yz,     
                  hex2L,  hex2G);

bzsolenoidO3("wcs", sol3ox, sol3oy, sol3oz + sol3pos, 
                    sol3xx, sol3xy, sol3xz,
                    sol3yx, sol3yy, sol3yz, 
                    sol3R,  sol3L,  sol3nI);

gaussiankick("wcs", sol1ox, sol1oy, sol1oz + sol1pos, 
                  sol1xx, sol1xy, sol1xz,
                  sol1yx, sol1yy, sol1yz, 
                  cz,     sol1cV, sol1cH);

gaussiankick("wcs", sol2ox, sol2oy, sol2oz + sol2pos, 
                  sol2xx, sol2xy, sol2xz,
                  sol2yx, sol2yy, sol2yz, 
                  cz,     sol2cV, sol2cH);

gaussiankick("wcs", soltox, soltoy, soltoz + soltpos, 
                  soltxx, soltxy, soltxz,
                  soltyx, soltyy, soltyz, 
                  cz,     soltcV, soltcH);

gaussiankick("wcs", csol1ox, csol1oy, csol1oz + csol1pos, 
                  csol1xx, csol1xy, csol1xz,
                  csol1yx, csol1yy, csol1yz, 
                  cz,     csol1cV, csol1cH);

gaussiankick("wcs", csol2ox, csol2oy, csol2oz + csol2pos, 
                  csol2xx, csol2xy, csol2xz,
                  csol2yx, csol2yy, csol2yz, 
                  cz,     csol2cV, csol2cH);

gaussiankick("wcs", csol3ox, csol3oy, csol3oz + csol3pos, 
                  csol3xx, csol3xy, csol3xz,
                  csol3yx, csol3yy, csol3yz, 
                  cz,     csol3cV, csol3cH);

gaussiankick("wcs", csol4ox, csol4oy, csol4oz + csol4pos, 
                  csol4xx, csol4xy, csol4xz,
                  csol4yx, csol4yy, csol4yz, 
                  cz,     csol4cV, csol4cH);

gaussiankick("wcs", hex1ox, hex1oy, hex1oz + hex1pos, 
                    hex1xx, hex1xy, hex1xz,     
                    hex1yx, hex1yy, hex1yz,     
                    cz,     hex1cV, hex1cH);

gaussiankick("wcs", hex2ox, hex2oy, hex2oz + hex2pos, 
                    hex2xx, hex2xy, hex2xz,     
                    hex2yx, hex2yy, hex2yz,     
                        cz, hex2cV, hex2cH);

gaussiankick("wcs", sol3ox, sol3oy, sol3oz + sol3pos, 
                    sol3xx, sol3xy, sol3xz,
                    sol3yx, sol3yy, sol3yz, 
                        cz, sol3cV, sol3cH);

#########
# Output and accuracy
#########
accuracy(11.41);
screen("wcs", "I", 0.99001);  # default screen at the center of obj
#screen("wcs", "I", 0.986); # screen after the obj lens
#snapshot( 0, 8e-9, 1e-12);  # multiple snapshot for trajectory
#snapshot(0);                # initial distribution snapshotcreen("wcs", "I", 0.99);
